<?php

declare(strict_types=1);

// phpcs:disable PSR1.Files.SideEffects.FoundWithSymbols
require_once __DIR__ . '/../../../lib/util.php';
require_once __DIR__ . '/../../../lib/bootstrap.php';
// phpcs:enable PSR1.Files.SideEffects.FoundWithSymbols

/**
 * We need to boot the entire Gazelle framework, since some changes
 * also need to be made to the Mysql instance. Those changes cannot
 * be run as a standard Mysql migration, because they are already
 * run before the Postgresql migrations. Therefore, this migration
 * relies on the framework to make the final changes. The following
 * Pg query is used as a basis to generate the Mysql query.

select '(' || ua.id_user_attr || ', ''' || ua.name || ''', ''' || ua.description || '''),'
from user_attr ua
left join relay.user_attr rua on (rua."ID" = ua.id_user_attr)
where rua."ID" is null;

 */

use Phinx\Migration\AbstractMigration;

final class ShiftUserAttrId extends AbstractMigration {
    public function up(): void {
        // move the old user_attr table away
        $this->query('
            alter table user_attr rename to user_attr_drop
        ');
        $this->query('
            alter index user_attr_pkey rename to user_attr_drop_pkey
        ');

        // create new user_attr table
        $this->query('
            create table user_attr (
                id_user_attr int not null primary key generated by default as identity,
                name text not null,
                description text not null
            )
        ');
        $this->query('
            create unique index attru_n_uidx on user_attr (name)
        ');

        // populate the new table with the rows from mysql
        $this->query('
            insert into user_attr (id_user_attr, name, description)
            select "ID", "Name", "Description"
            from relay.user_attr
            order by 1
        ');
        // complete with the rows from the old pg user_attr table
        $this->query('
            insert into user_attr (id_user_attr, name, description)
            select id + (select max("ID") from relay.user_attr), name, description
            from user_attr_drop
            order by 1
        ');
        // and make the user_has_attr rows point to the new user_attr offset
        $this->query('
            update user_has_attr set
                id_user_attr = id_user_attr
                    + (select max("ID") from relay.user_attr)
        ');

        // correct the the user_has_attr structure
        $this->query('
            alter table user_has_attr
                drop constraint user_has_attr_pkey,
                add primary key (id_user, id_user_attr),
                drop constraint no_duplicate_attr,
                drop column id;
        ');

        $this->query('
            create table user_attr_notification (
                id_user_attr int not null primary key references user_attr
            )
        ');
        $this->query("
            insert into user_attr_notification
            select id_user_attr
            from user_attr
            where name ~ '_(pop|push|trad)$'
        ");
        $this->query("
            update user_attr set
                name = replace(name, '_', '-')
            from user_attr_notification
            where user_attr_notification.id_user_attr = user_attr.id_user_attr;
        ");

        // now go back to mysql and fetch the new rows from pg
        $mysql = \Gazelle\DB::DB();
        $max = $mysql->scalar("
            SELECT max(ID) from user_attr
        ");
        $mysql->prepared_query("
            INSERT INTO user_attr VALUES
            ($max +  1, 'news-pop', 'Get a pop-up notification on news'),
            ($max +  2, 'news-trad', 'Get a traditional notification on news'),
            ($max +  3, 'news-push', 'Get a push notification on news'),
            ($max +  4, 'blog-pop', 'Get a pop-up notification on blog'),
            ($max +  5, 'blog-trad', 'Get a traditional notification on blog'),
            ($max +  6, 'blog-push', 'Get a push notification on blog'),
            ($max +  7, 'inbox-pop', 'Get a pop-up notification on inbox'),
            ($max +  8, 'inbox-trad', 'Get a traditional notification on inbox'),
            ($max +  9, 'inbox-push', 'Get a push notification on inbox'),
            ($max + 10, 'quote-pop', 'Get a pop-up notification on quote'),
            ($max + 11, 'quote-trad', 'Get a traditional notification on quote'),
            ($max + 12, 'quote-push', 'Get a push notification on quote'),
            ($max + 13, 'staffpm-pop', 'Get a pop-up notification on staffpm'),
            ($max + 14, 'staffpm-trad', 'Get a traditional notification on staffpm'),
            ($max + 15, 'staffpm-push', 'Get a push notification on staffpm'),
            ($max + 16, 'torrent-pop', 'Get a pop-up notification on torrent'),
            ($max + 17, 'torrent-trad', 'Get a traditional notification on torrent'),
            ($max + 18, 'torrent-push', 'Get a push notification on torrent'),
            ($max + 19, 'collage-pop', 'Get a pop-up notification on collage'),
            ($max + 20, 'collage-trad', 'Get a traditional notification on collage'),
            ($max + 21, 'collage-push', 'Get a push notification on collage'),
            ($max + 22, 'subscription-pop', 'Get a pop-up notification on subscription'),
            ($max + 23, 'subscription-trad', 'Get a traditional notification on subscription'),
            ($max + 24, 'subscription-push', 'Get a push notification on subscription'),
            ($max + 25, 'globalnotification-pop', 'Get a pop-up notification on globalnotification'),
            ($max + 26, 'globalnotification-trad', 'Get a traditional notification on globalnotification'),
            ($max + 27, 'globalnotification-push', 'Get a push notification on globalnotification');
        ");
    }

    public function down(): void {
        $mysql = \Gazelle\DB::DB();
        $mysql->prepared_query("
            DELETE FROM user_attr WHERE Name IN (
                'news-pop', 'news-trad', 'news-push',
                'blog-pop', 'blog-trad', 'blog-push',
                'inbox-pop', 'inbox-trad', 'inbox-push',
                'quote-pop', 'quote-trad', 'quote-push',
                'staffpm-pop', 'staffpm-trad', 'staffpm-push',
                'torrent-pop', 'torrent-trad', 'torrent-push',
                'collage-pop', 'collage-trad', 'collage-push',
                'subscription-pop', 'subscription-trad', 'subscription-push',
                'globalnotification-pop', 'globalnotification-trad', 'globalnotification-push'
            )
        ");

        $this->query('
            update user_has_attr set
                id_user_attr = id_user_attr
                    - (select max("ID") from relay.user_attr)
        ');

        $this->query('
            alter table user_has_attr
                add column id int not null generated always as identity,
                drop constraint user_has_attr_pkey,
                add primary key (id),
                add constraint no_duplicate_attr unique (id_user, id_user_attr)
        ');

        $this->query('
            drop table if exists user_attr, user_attr_notification;
        ');
        $this->query('
            alter table user_attr_drop rename to user_attr
        ');
        $this->query('
            alter index user_attr_drop_pkey rename to user_attr_pkey
        ');
    }
}
